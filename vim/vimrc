
let $VIM='~/.vim/'

" activate pathogen. Note, must be before any filetype detection commands!
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

set nocompatible
" syntax on " this is set later if we have colours
" set hlsearch " this is set later if we have colours
set autoindent shiftwidth=4 tabstop=4
set number

let mapleader = "'"
" show line numbers
nmap <leader>n :set number!<CR>
" show invisibles
nmap <leader>l :set list!<CR>
" strip whitespace from end of lines
nmap <leader>w :call <SID>StripTrailingWhitespaces()<CR>
nnoremap <silent> <F5> :call <SID>StripTrailingWhitespaces()<CR>
" tab shortcuts
"nmap <D-[> <<
"nmap <D-]> >>
"vmap <D-[> <gv
"vmap <D-]> >gv
"nmap <C-[> <<
"nmap <C-]> >>
"vmap <C-[> <gv
"vmap <C-]> >gv

" List invisibles
set listchars=tab:>\ ,eol:$,trail:.
set listchars=tab:▸\ ,eol:¬,trail:.
highlight NonText ctermfg=DarkCyan
highlight SpecialKey ctermfg=DarkCyan
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59



"colorscheme darkblue
"
"" au BufNewFile,BufRead *.phtml setf php


" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
	set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
	syntax on
	set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

	" Enable file type detection.
	" Use the default filetype settings, so that mail gets 'tw' set to 72,
	" 'cindent' is on in C files, etc.
	" Also load indent files, to automatically do language-dependent indenting.
	filetype plugin indent on

	" Put these in an autocmd group, so that we can delete them easily.
	augroup vimrcEx
		au!

		" For all text files set 'textwidth' to 78 characters.
		autocmd FileType text setlocal textwidth=78

		" When editing a file, always jump to the last known cursor position.
		" Don't do it when the position is invalid or when inside an event handler
		" (happens when dropping a file on gvim).
		" Also don't do it when the mark is in the first line, that is the default
		" position when opening a file.
		autocmd BufReadPost *
					\ if line("'\"") > 1 && line("'\"") <= line("$") |
					\   exe "normal! g`\"" |
					\ endif

	augroup END

else

	set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
	command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
				\ | wincmd p | diffthis
endif



function! <SID>StripTrailingWhitespaces()
	" Preparation: save last search, and cursor position
	let _s=@/
	let l = line(".")
	let c = col(".")
	" Do the business:
	%s/\s\+$//e
	" Clean up: restore previous search history, and cursor position
	let @/=_s
	call cursor(l, c)
endfunction

